---
title: "Multimodality Imagers in the US, 2013-2022"
subtitle: "An Analysis of Medicare Data"
format: 
  html:
    toc: true
    toc-expand: true
    toc-location: body
date: 2-5-2024
theme: lightly
author:
  - name: "Ahmed Sayed (asu.ahmed.sayed@gmail.com)"
    affiliations: "Houston Methodist DeBakey Heart & Vascular Center, Houston, Texas, USA"
    address: 6550 Fannin Street
    city: Houston
    state: Texas
    postal: 77030
embed-resources: true
toc-title: Contents
page-layout: full
code-fold: true
editor: visual
editor_options: 
  chunk_output_type: console
---

# Libraries

```{r}
library(dplyr)
library(tidyverse)
library(data.table)
library(ggplot2)
library(forcats)
library(ggthemes)
library(scales)
library(ggpubr)
library(readr)
library(curl)
library(stringr)
library(usmap)
library(dtplyr)
library(facetscales)

#This is a replacement string that we'll be using often to change modalities from their shortcuts to the full thing
c(
"pet" = "PET",
"echo" = "Echo",
"spect" = "SPECT",
"cta" = "CTA",
"mri" = "MRI"
) -> replacement_string
```

# Preparing the data

## Download zip files

```{r}
# ##UUIDS (Universally Unique Identifier) for datasets from 2013-2022
# uuids <- c(
#   "2013" = "ebaf67d7-1572-4419-a053-c8631cc1cc9b",
#   "2014" = "e6aacd22-1b89-4914-855c-f8dacbd2ec60",
#   "2015" = "0ccba18d-b821-47c6-bb55-269b78921637",
#   "2016" = "5055d307-4fb3-4474-adbb-a11f4182ee35",
#   "2017" = "7ebc578d-c2c7-46fd-8cc8-1b035eba7218",
#   "2018" = "02c0692d-e2d9-4714-80c7-a1d16d72ec66",
#   "2019" = "5fccd951-9538-48a7-9075-6f02b9867868",
#   "2020" = "862ed658-1f38-4b2f-b02b-0b359e12c78a",
#   "2021" = "5c67d835-3862-4f63-897d-85d3eac82d5b",
#   "2022" = "4f307be4-6868-4a9e-ae92-acf3fd4b5543"
#   
# )
# 
# #Filters (according to HSPCS codes for each modality)
# pet_filter <- "filter[root-group][group][conjunction]=AND&filter[group-0][group][conjunction]=OR&filter[group-0][group][memberOf]=root-group&filter[filter-0-0][condition][path]=HCPCS_Cd&filter[filter-0-0][condition][operator]=%3D&filter[filter-0-0][condition][value]=78429&filter[filter-0-0][condition][memberOf]=group-0&filter[filter-0-1][condition][path]=HCPCS_Cd&filter[filter-0-1][condition][operator]=%3D&filter[filter-0-1][condition][value]=78430&filter[filter-0-1][condition][memberOf]=group-0&filter[filter-0-2][condition][path]=HCPCS_Cd&filter[filter-0-2][condition][operator]=%3D&filter[filter-0-2][condition][value]=78431&filter[filter-0-2][condition][memberOf]=group-0&filter[filter-0-3][condition][path]=HCPCS_Cd&filter[filter-0-3][condition][operator]=%3D&filter[filter-0-3][condition][value]=78432&filter[filter-0-3][condition][memberOf]=group-0&filter[filter-0-4][condition][path]=HCPCS_Cd&filter[filter-0-4][condition][operator]=%3D&filter[filter-0-4][condition][value]=78433&filter[filter-0-4][condition][memberOf]=group-0&filter[filter-0-5][condition][path]=HCPCS_Cd&filter[filter-0-5][condition][operator]=%3D&filter[filter-0-5][condition][value]=78434&filter[filter-0-5][condition][memberOf]=group-0&filter[filter-0-6][condition][path]=HCPCS_Cd&filter[filter-0-6][condition][operator]=%3D&filter[filter-0-6][condition][value]=78459&filter[filter-0-6][condition][memberOf]=group-0&filter[filter-0-7][condition][path]=HCPCS_Cd&filter[filter-0-7][condition][operator]=%3D&filter[filter-0-7][condition][value]=78491&filter[filter-0-7][condition][memberOf]=group-0&filter[filter-0-8][condition][path]=HCPCS_Cd&filter[filter-0-8][condition][operator]=%3D&filter[filter-0-8][condition][value]=78492&filter[filter-0-8][condition][memberOf]=group-0"
# spect_filter <- "filter[root-group][group][conjunction]=AND&filter[group-0][group][conjunction]=OR&filter[group-0][group][memberOf]=root-group&filter[filter-0-0][condition][path]=HCPCS_Cd&filter[filter-0-0][condition][operator]=%3D&filter[filter-0-0][condition][value]=78451&filter[filter-0-0][condition][memberOf]=group-0&filter[filter-0-1][condition][path]=HCPCS_Cd&filter[filter-0-1][condition][operator]=%3D&filter[filter-0-1][condition][value]=78452&filter[filter-0-1][condition][memberOf]=group-0"
# ct_filter <- "filter[root-group][group][conjunction]=AND&filter[group-0][group][conjunction]=OR&filter[group-0][group][memberOf]=root-group&filter[filter-0-0][condition][path]=HCPCS_Cd&filter[filter-0-0][condition][operator]=%3D&filter[filter-0-0][condition][value]=75571&filter[filter-0-0][condition][memberOf]=group-0&filter[filter-0-1][condition][path]=HCPCS_Cd&filter[filter-0-1][condition][operator]=%3D&filter[filter-0-1][condition][value]=75572&filter[filter-0-1][condition][memberOf]=group-0&filter[filter-0-2][condition][path]=HCPCS_Cd&filter[filter-0-2][condition][operator]=%3D&filter[filter-0-2][condition][value]=75573&filter[filter-0-2][condition][memberOf]=group-0&filter[filter-0-3][condition][path]=HCPCS_Cd&filter[filter-0-3][condition][operator]=%3D&filter[filter-0-3][condition][value]=75574&filter[filter-0-3][condition][memberOf]=group-0"
# echo_filter <- "filter[root-group][group][conjunction]=AND&filter[group-0][group][conjunction]=OR&filter[group-0][group][memberOf]=root-group&filter[filter-0-0][condition][path]=HCPCS_Cd&filter[filter-0-0][condition][operator]=%3D&filter[filter-0-0][condition][value]=93303&filter[filter-0-0][condition][memberOf]=group-0&filter[filter-0-1][condition][path]=HCPCS_Cd&filter[filter-0-1][condition][operator]=%3D&filter[filter-0-1][condition][value]=93304&filter[filter-0-1][condition][memberOf]=group-0&filter[filter-0-2][condition][path]=HCPCS_Cd&filter[filter-0-2][condition][operator]=%3D&filter[filter-0-2][condition][value]=93306&filter[filter-0-2][condition][memberOf]=group-0&filter[filter-0-3][condition][path]=HCPCS_Cd&filter[filter-0-3][condition][operator]=%3D&filter[filter-0-3][condition][value]=93307&filter[filter-0-3][condition][memberOf]=group-0&filter[filter-0-4][condition][path]=HCPCS_Cd&filter[filter-0-4][condition][operator]=%3D&filter[filter-0-4][condition][value]=93308&filter[filter-0-4][condition][memberOf]=group-0&filter[filter-0-5][condition][path]=HCPCS_Cd&filter[filter-0-5][condition][operator]=%3D&filter[filter-0-5][condition][value]=93312&filter[filter-0-5][condition][memberOf]=group-0&filter[filter-0-6][condition][path]=HCPCS_Cd&filter[filter-0-6][condition][operator]=%3D&filter[filter-0-6][condition][value]=93313&filter[filter-0-6][condition][memberOf]=group-0&filter[filter-0-7][condition][path]=HCPCS_Cd&filter[filter-0-7][condition][operator]=%3D&filter[filter-0-7][condition][value]=93314&filter[filter-0-7][condition][memberOf]=group-0&filter[filter-0-8][condition][path]=HCPCS_Cd&filter[filter-0-8][condition][operator]=%3D&filter[filter-0-8][condition][value]=93315&filter[filter-0-8][condition][memberOf]=group-0&filter[filter-0-9][condition][path]=HCPCS_Cd&filter[filter-0-9][condition][operator]=%3D&filter[filter-0-9][condition][value]=93316&filter[filter-0-9][condition][memberOf]=group-0&filter[filter-0-10][condition][path]=HCPCS_Cd&filter[filter-0-10][condition][operator]=%3D&filter[filter-0-10][condition][value]=93317&filter[filter-0-10][condition][memberOf]=group-0&filter[filter-0-11][condition][path]=HCPCS_Cd&filter[filter-0-11][condition][operator]=%3D&filter[filter-0-11][condition][value]=93318&filter[filter-0-11][condition][memberOf]=group-0&filter[filter-0-12][condition][path]=HCPCS_Cd&filter[filter-0-12][condition][operator]=%3D&filter[filter-0-12][condition][value]=93350&filter[filter-0-12][condition][memberOf]=group-0&filter[filter-0-13][condition][path]=HCPCS_Cd&filter[filter-0-13][condition][operator]=%3D&filter[filter-0-13][condition][value]=93351&filter[filter-0-13][condition][memberOf]=group-0&filter[filter-0-14][condition][path]=HCPCS_Cd&filter[filter-0-14][condition][operator]=%3D&filter[filter-0-14][condition][value]=93352&filter[filter-0-14][condition][memberOf]=group-0"
# mri_filter <- "filter[root-group][group][conjunction]=AND&filter[group-0][group][conjunction]=OR&filter[group-0][group][memberOf]=root-group&filter[filter-0-0][condition][path]=HCPCS_Cd&filter[filter-0-0][condition][operator]=%3D&filter[filter-0-0][condition][value]=75557&filter[filter-0-0][condition][memberOf]=group-0&filter[filter-0-1][condition][path]=HCPCS_Cd&filter[filter-0-1][condition][operator]=%3D&filter[filter-0-1][condition][value]=75559&filter[filter-0-1][condition][memberOf]=group-0&filter[filter-0-2][condition][path]=HCPCS_Cd&filter[filter-0-2][condition][operator]=%3D&filter[filter-0-2][condition][value]=75561&filter[filter-0-2][condition][memberOf]=group-0&filter[filter-0-3][condition][path]=HCPCS_Cd&filter[filter-0-3][condition][operator]=%3D&filter[filter-0-3][condition][value]=75563&filter[filter-0-3][condition][memberOf]=group-0"
# 
# #Increase timeout limit
# options(timeout = 1000)
# 
# #Use curl to donwload
# library(curl)
# 
# #Download PET Data
# multi_download(
#   urls = paste0("https://data.cms.gov/data-api/v1/dataset/",
#                 uuids,
#                 "/data-viewer?",
#                 pet_filter,
#                 "&_format=csv"),
#   destfiles = paste0("Zip/PET - ", 2013:2022, ".zip")
# )
# 
# #Download SPECT Data
# multi_download(
#   urls = paste0("https://data.cms.gov/data-api/v1/dataset/",
#                 uuids,
#                 "/data-viewer?",
#                 spect_filter,
#                 "&_format=csv"),
#   destfiles = paste0("Zip/SPECT - ", 2013:2022, ".zip")
# )
# 
# #Download CT data
# multi_download(
#   urls = paste0("https://data.cms.gov/data-api/v1/dataset/",
#                 uuids,
#                 "/data-viewer?",
#                 ct_filter,
#                 "&_format=csv"),
#   destfiles = paste0("Zip/CT - ", 2013:2022, ".zip")
# )
# 
# #Download CMR data
# multi_download(
#   urls = paste0("https://data.cms.gov/data-api/v1/dataset/",
#                 uuids,
#                 "/data-viewer?",
#                 mri_filter,
#                 "&_format=csv"), 
#   destfiles = paste0("Zip/CMR - ", 2013:2022, ".zip")
# )
# 
# #Download Echo data
# multi_download(
#   urls = paste0("https://data.cms.gov/data-api/v1/dataset/",
#                 uuids,
#                 "/data-viewer?",
#                 echo_filter,
#                 "&_format=csv"),
#   destfiles = paste0("Zip/Echo - ", 2013:2022, ".zip")
# )
```

## Unzip them

```{r}
# #Get names of zip files
# zip_files <- list.files(paste0(getwd(), "/Zip")) %>%
#   str_subset(".zip")
# 
# #Unzip and rename them
# for(i in 1:length(zip_files)) {
# unzip(paste0("Zip/", zip_files[i]),
#       exdir = paste0(getwd(), "/Data"))
# file.rename(
#   from = paste0("Data/", unzip(paste0("Zip/", zip_files[i]),
#       exdir = paste0(getwd(), "/Data"),
#       list = TRUE)$Name),
#   to = paste0("Data/", zip_files[i] %>% str_replace(".zip", ".csv"))
#   )
# }

```

## Combine & clean data

### Import data

```{r}
#Combine the data
data <- list.files(path = "Data/", full.names = TRUE) %>%
  lapply(., function(filename) fread(filename) %>%
           mutate(year = str_extract(filename, "[0-9]+"))) %>%
  rbindlist

#Clean up the data
data <- data %>%
  #Rename
  rename(npi = Rndrng_NPI,
         n_services = Tot_Srvcs,
         provider_type = Rndrng_Prvdr_Type,
         code = HCPCS_Cd,
         credentials = Rndrng_Prvdr_Crdntls,
         gender = Rndrng_Prvdr_Gndr
         ) %>%
  #Change formating
  mutate(year = year %>% as.numeric,
         code = code %>% as.factor,
         provider_type = provider_type %>% as.factor
         ) %>%
  #Select relevant columns
    select(npi, provider_type, credentials, code, n_services, year, gender)


#Modality HSPCS codes
pet_codes <- paste0(c(78429:78433, 78459, 78491, 78492))
spect_codes <- paste0(c(78451, 78452))
ct_codes <- paste0(c(75571:75574))
mri_codes <- paste0(c(75557, 75559, 75561, 75563))
echo_codes <- paste0(c(93303, 93304,
                       93306, 93307, 93308,
                       93312:93318,
                       93350:93351))

#Tabulate
data.frame(
  Modality = c("SPECT", "Echo", "CT", "PET", "MRI"),
  Codes = c(spect_codes %>% paste0(collapse = ", "),
            echo_codes %>% paste0(collapse = ", "),
            ct_codes %>% paste0(collapse = ", "),
            pet_codes %>% paste0(collapse = ", "),
            mri_codes %>% paste0(collapse = ", "))
) -> codes_used

#Create a table containing the used codes
library(flextable)
flextable(codes_used) %>%
  bold(part = "header") %>%
  bold(j = 1) %>%
  border_inner %>%
  border_outer %>%
  font(fontname = "Times New Roman") %>%
  width(width = 2.5) -> codes_used_table


#Whatever's not included in the above, filter it out
data <- data %>%
  filter(code %in% c(pet_codes, spect_codes,
                     ct_codes, mri_codes,
                     echo_codes))

#Rename codes to meaningful things
data <- data %>%
  mutate(modality = case_when(
    code %in% pet_codes ~ "PET",
    code %in% spect_codes ~ "SPECT",
    code %in% ct_codes ~ "CT",
    code %in% mri_codes ~ "MRI",
    code %in% echo_codes ~ "Echo"
  ) %>% factor)

#Categorize relevant stuff into cardio and radio
data <- data %>%
  #Correct spelling mistake ("cardiatric")
  mutate(provider_type = provider_type %>% str_replace_all("(?i)cardiatric", "cardiac")) %>%
  mutate(cards_rads = case_when(
    provider_type %>% str_detect("(?i)Heart|Cardio|Cardiac electro|Interventional Cardiology") ~ "Cardiology",
    provider_type %>% str_detect("(?i)Radio|Nuclear") ~ "Radiology",
    TRUE ~ "Other"
  ) %>% factor
  )
```

#### Filter to physician procedures

```{r}
#See what credentials look like
data[, credentials %>% factor %>% summary]
#Remove useless confusing strings
data[, credentials := credentials %>% str_remove_all("\\.|;|:")]
#Create a new category
data[, physician_ind := fcase(
  str_detect(credentials, "(?i)md|m d|m,d|m>d>"), "Physician",
  str_detect(credentials, "(?i)do|d o"), "Physician",
  str_detect(credentials, "(?i)mbbs"), "Physician",
  str_detect(credentials, "(?i)mbbch|bmbs|mb,bch|mb, bch|mb, bs|mb bs|mb,bs|mb chb|mb bao|mb, bao|mb,chb|mb bch|mb bchir|mbchb"), "Physician",
  str_detect(credentials, "(?i)dr|physician"), "Physician"
)]

#Filter to physicians
data <- data[physician_ind == "Physician"]
```

#### Filter to cardiologists/radiologists

```{r}
#Create a separate data.table containing the n of specialties per provider
data[,
     .(n_specialties = uniqueN(cards_rads),
       names_specialties = paste0(unique(cards_rads), collapse = "; "),
       n_cards = sum(str_count(cards_rads, "Cardiology")),
       n_rads = sum(str_count(cards_rads, "Radiology"))
       ),
     by = npi][n_specialties > 1] -> multi_specialty_data

##Whenever a non-cardio/radio specialty is provided, see if the provider has billed for cardio/radio elsewhere

#And replace with cardiology
multi_specialty_data[
  names_specialties %>% str_detect("Cardiology") & 
    names_specialties %>% str_detect("Other") &
    names_specialties %>% str_detect("Radiology", negate = TRUE),
  new_specialty := "Cardiology"
  ]

#Or radiology
multi_specialty_data[
  names_specialties %>% str_detect("Radiology") & 
    names_specialties %>% str_detect("Other") &
    names_specialties %>% str_detect("Cardiology", negate = TRUE),
  new_specialty := "Radiology"
]

#Get providers who have both cardio and radio
#and assign them whichever one was used during more rows
multi_specialty_data[is.na(new_specialty),
                     new_specialty := ifelse(n_cards > n_rads, "Cardiology",
                               ifelse(n_rads > n_cards, "Radiology", NA))
                     ]

#There are three remaining providers who had radio and cardio written an equal nubmer of times
#https://npiregistry.cms.hhs.gov/ was used to look up their specialties
multi_specialty_data[npi == 1306176706, new_specialty := "Radiology"] 
multi_specialty_data[npi == 1699711671, new_specialty := "Radiology"] 
multi_specialty_data[npi == 1851403836, new_specialty := "Cardiology"] 
multi_specialty_data[npi == 1386681450, new_specialty := "Cardiology"] 
multi_specialty_data[npi == 1265480784, new_specialty := "Cardiology"] 


#Merge with the original datafile
merge(x = data,
      y = multi_specialty_data[, .(npi, new_specialty)],
      by = "npi",
      all.x = TRUE,
      all.y = FALSE) -> data

#Replace by new specialty if it's not missing
data[npi %in% multi_specialty_data[, npi],
     cards_rads := new_specialty]

#Limit to cards/rads only
data <- data[cards_rads %in% c("Cardiology", "Radiology")]

#Check that none have more than 1 specialty
data[, uniqueN(cards_rads), by = npi][, range(V1)]
```

## Create Data Subsets

### Create MM readers dataset

```{r}
#This new dataset contains the modalities read by each reader over time
mm_readers <- data %>%
  lazy_dt %>%
  group_by(year, npi) %>%
  summarise(n_reads = sum(n_services),
            n_modalities = uniqueN(modality),
            modalities = paste(unique(modality), collapse = " & "),
            cards_rads = unique(cards_rads)
  ) %>%
  #Add an indicator column
  mutate(echo = str_detect(modalities, "Echo") %>% as.numeric,
         spect = str_detect(modalities, "SPECT") %>% as.numeric,
         pet = str_detect(modalities, "PET") %>% as.numeric,
         cta = str_detect(modalities, "(?<!SPE)CT") %>% as.numeric,
         mri = str_detect(modalities, "MRI") %>% as.numeric) %>%
  #Group by specific modalities combinations
  mutate(
    echo_spect = ifelse(echo + spect == 2, 1, 0),
    echo_cta_mri = ifelse(echo + cta + mri == 3, 1, 0),
    cta_mri = ifelse(cta + mri == 2, 1, 0),
    pet_cta_mri = ifelse(pet + cta + mri == 3, 1, 0),
    advanced = ifelse(echo + spect > 0 & cta + mri + pet > 0, 1, 0),
    advanced_sens = ifelse(echo + spect + pet > 0 & cta + mri  > 0, 1, 0)
  ) %>%
  as.data.table
```

# Analyze

## Readers over time

### Create Data

```{r}
#Get the N of modalities read by each reader over time (For V1)
n_mm_readers <- mm_readers %>%
  mutate(n_modalities = ifelse(n_modalities %in% c(4, 5), "4 or 5", n_modalities)) %>%
  group_by(year, n_modalities) %>%
  summarise(n_readers = uniqueN(npi)) %>%
  mutate(n_modalities = (n_modalities))

#Join to self
left_join(n_mm_readers,
          n_mm_readers %>% 
            filter(year == 2013) %>%
            mutate(baseline_n = n_readers) %>%
            ungroup %>%
            select(baseline_n, n_modalities),
          by = c("n_modalities")
          ) -> n_mm_readers

#Create ratio vs baseline
n_mm_readers %>%
  mutate(ratio = n_readers/baseline_n) -> n_mm_readers
```

### Figure 1A

```{r}
library(Hmisc)
ggplot(data = n_mm_readers,
       aes(y = n_readers,
           x = year,
           color = factor(n_modalities))) +
  geom_line(lwd = 2) +
  geom_point(size = 9, pch = 18) +
  ggtitle("Trends in the number of imaging modalities read by each physician, 2013-2022") +
  scale_y_continuous(name = "Number of physicians",
                     trans = "log",
                     breaks = c(100, 250, 500, 
                                1000, 2500, 5000, 
                                10000, 25000),
                     limits = c(100, 26000)
                     ) +
  scale_x_continuous(name = NULL,
                     breaks = seq(2013, 2022, 1)) +
    scale_color_stata(name = "Number of modalities read by provider") +
  #Theme
  theme_pubclean() +
  theme(text = element_text(size = 23),
      plot.title=element_text(face = "bold",hjust = 0.5, size = 18),
      plot.subtitle = element_text(face = "bold", size = 10, hjust = 0.0, color = "grey45"),
      axis.text.x = element_text(size = 16, face = "bold"),
      axis.text.y = element_text(size = 15, face = "bold"),
      axis.title.x = element_text(size = 25, face = "bold"),
      axis.title.y = element_text(size = 18, face = "bold"),
      axis.line = element_line(colour = "black", linewidth = 1.2),
      plot.margin = margin(0.5, 1, 0.5, 1, "cm"),
      strip.text = element_text(face = "bold"),
      strip.background = element_rect(fill = "grey90"),
      legend.position = "bottom",
      legend.text = element_text(size = 20, face = "bold"),
      legend.title = element_text(size = 20, face = "bold"),
      legend.key.width = unit(4, "cm"),
      legend.key.height = unit(0.75, "cm"),
      legend.background = element_rect(fill = "transparent"),
      legend.key = element_rect(fill = "transparent"),
      panel.spacing = unit(1, "lines")
      ) -> readers_change_fig

ggsave("Figures/Figure 1A.pdf",
       dpi = 600,
       width = 16,
       height = 9)
```

### Figure 1B

```{r}
library(Hmisc)
ggplot(data = n_mm_readers,
       aes(y = ratio,
           x = year,
           color = factor(n_modalities))) +
  geom_hline(yintercept = 1, lwd = 1.25) +
  geom_line(lwd = 2) +
  geom_point(size = 9, pch = 18) +
  ggtitle("Trends in the number of imaging modalities read by each physician, 2013-2022") +
  scale_y_continuous(name = "% Change in number of physician since 2013",
                     trans = "log",
                     breaks = c(0.75, 1, 1.25, 1.5, 2, 2.5, 3),
                     labels = c("25%\ndecrease", 
                                "No change",
                                "25%\nincrease",
                                "50%\nincrease",
                                "100%\nincrease", 
                                "150%\nincrease", 
                                "200%\nincrease")
                     ) +
  scale_x_continuous(name = NULL,
                     breaks = seq(2013, 2022, 1)) +
    scale_color_stata(name = "Number of modalities read by provider") +
  #Theme
  theme_pubclean() +
  theme(text = element_text(size = 23),
      plot.title=element_text(face = "bold",hjust = 0.5, size = 18),
      plot.subtitle = element_text(face = "bold", size = 10, hjust = 0.0, color = "grey45"),
      axis.text.x = element_text(size = 16, face = "bold"),
      axis.text.y = element_text(size = 15, face = "bold"),
      axis.title.x = element_text(size = 25, face = "bold"),
      axis.title.y = element_text(size = 18, face = "bold"),
      axis.line = element_line(colour = "black", linewidth = 1.2),
      plot.margin = margin(0.5, 1, 0.5, 1, "cm"),
      strip.text = element_text(face = "bold"),
      strip.background = element_rect(fill = "grey90"),
      legend.position = "bottom",
      legend.title = element_text(size = 20, face = "bold"),
      legend.text = element_text(size = 20, face = "bold"),
      legend.key.width = unit(4, "cm"),
      legend.key.height = unit(0.75, "cm"),
      legend.background = element_rect(fill = "transparent"),
      legend.key = element_rect(fill = "transparent"),
      panel.spacing = unit(1, "lines")
      ) -> readers_change_fig

ggsave("Figures/Figure 1B.pdf",
       dpi = 600,
       width = 16,
       height = 9)
```

## Values (required for the results section)

```{r}
as.data.table(n_mm_readers) -> n_mm_readers
#N of readers and % increase
n_mm_readers[year == 2013 | year == 2022] %>% arrange(n_modalities)

#N of advanced imagers
mm_readers[(spect == 1 | echo == 1) & (cta == 1 | mri == 1 | pet == 1),
           .(n = uniqueN(npi)),
           by = .(year)]


#MM by specialty
mm_readers %>%
  mutate(n_modalities = ifelse(n_modalities %in% c(4, 5), "4 or 5", n_modalities)) %>%
  {.[,
    .(n = uniqueN(npi)),
    by = .(year, cards_rads, n_modalities)][, .(n, 
                                        prop = (n/sum(n)) %>%
                                          scales::percent(),
                                        n_modalities
                                        ),
                                    by = .(year, cards_rads)] }

#Advanced by specialty
mm_readers[(spect == 1 | echo == 1) & (cta == 1 | mri == 1 | pet == 1),
           .(n = uniqueN(npi)),
           by = .(year, cards_rads)][, .(n, 
                                        prop = 100*n/sum(n)
                                        ),
                                    by = .(year, cards_rads)]  %>%
  filter(year %in% c(2013, 2022))

#% of specialists each year
mm_readers[(spect == 1 | echo == 1) & (cta == 1 | mri == 1 | pet == 1),
           .(n = uniqueN(npi)),
           by = .(year, cards_rads)][, .(n, 
                                        prop = 100*n/sum(n),
                                        cards_rads
                                        ),
                                    by = year] 

```
